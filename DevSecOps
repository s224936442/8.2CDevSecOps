pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                bat 'echo Cloning repository...'
                git branch: 'main', url: 'https://github.com/s224936442/8.2CDevSecOps.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                bat 'npm test || exit /b 0'
            }
            post {
                always {
                    emailext(
                        subject: "Test Stage Complete - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                        body: "The 'Run Tests' stage has completed. Status: ${currentBuild.result}\nCheck Jenkins for logs.",
                        to: 'your-email@example.com',
                        attachLog: true
                    )
                }
            }
        }

        stage('Generate Coverage Report') {
            steps {
                bat 'npm run coverage || exit /b 0'
            }
        }

        stage('NPM Audit (Security Scan)') {
            steps {
                bat 'npm audit || exit /b 0'
            }
            post {
                always {
                    emailext(
                        subject: "Security Scan Complete - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                        body: "The 'Security Scan' stage has completed. Status: ${currentBuild.result}\nCheck Jenkins for logs.",
                        to: 'your-email@example.com',
                        attachLog: true
                    )
                }
            }
        }
    }
}
